@using CollectionsApp.ViewModels
@model Item


@{
    ViewData["Title"] = "Edit";
   
}

<h1>Edit</h1>

<h4>Item</h4>
<hr />
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <form asp-action="Edit" class="form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="@Model.Id" />
                <div class="form-group">
                    <label asp-for="Name" class="control-label">Name</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">

                    <label asp-for="Tags" class="control-label">Tags</label>
                    <input asp-for="Tags" class="form-control"></>
                    <span asp-validation-for="Tags" class="text-danger"></span>
                </div>
                <div class="form-group">
                    @foreach (var cfv in Model.ItemCustomFieldVals)
                    {
                        <div class="custom-field-row">
                            <label asp-for="@cfv.Label" class="control-label">@cfv.Label</label>
                            <input asp-for="@cfv.Value" class="form-control" />
                            <span asp-validation-for="@cfv.Label" class="text-danger"></span>
                            <button type="button" class="btn btn-danger remove-custom-field-btn" style="margin-left:5px">Delete</button>
                        </div>
                    }
                </div>

               
                        
               
               
                <button id="newItemSubmit" type="submit" class="btn btn-info">Save Changes</button>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Items</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
