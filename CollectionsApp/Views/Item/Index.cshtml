@using CollectionsApp.ViewModels
@model ItemPageVM
@{
    ViewData["Title"] = "Items";
}

<div class="container mt-5">
    <div class="row mb-3">
        <div class="col-md-6">
            <form class="d-inline-block mr-2" method="get" asp-controller="Item" asp-action="Create" asp-route-id="@Model.collection.Id">
                <button type="submit" class="btn btn-info">
                    <i class="fa-solid fa-plus" style="margin-right: 5px;"></i>Add Item
                </button>
            </form>
            <form class="d-inline-block" method="get" asp-controller="Home" asp-action="Profile" asp-route-id="@Model.collection.AppUserId">
                <button type="submit" class="btn btn-warning">
                    <i class="fa-solid fa-circle-chevron-left" style="margin-right: 5px;"></i>Back to collection(s)
                </button>
            </form>
            <form class="d-inline-block ml-2" asp-controller="Items" asp-action="Index" method="get">
                <label class="mr-2">Sort by:</label>
                <select class="form-control form-control-sm" onchange="location = this.value;">
                    <option value="@Url.Action("Index", new { sortOrder = ViewBag.CurrentSort, Id = Model.collection.Id, searchString = ViewBag.SearchString })">-Select Column --</option>
                    <option value="@Url.Action("Index", new { sortOrder = ViewBag.NameSortParam, Id = Model.collection.Id, searchString = ViewBag.SearchString })">Name</option>
                    <option value="@Url.Action("Index", new { sortOrder = ViewBag.TagsSortParam, Id = Model.collection.Id, searchString = ViewBag.SearchString })">Tags</option>
                    
                </select>
            </form>
        </div>
    </div>

    <!-- Your table code goes here -->
</div>


    <div class="row">
        <div class="col">
            <table class="table table-hover">
                <thead class="thread">
                    <tr class="table-danger">
                        <th scope="col">Name</th>
                        <th scope="col">Tags</th>
                        @foreach (var cf in Model.collection.CustomFields)
                        {
                            <th>@cf.Label</th>
                        }
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var Item in Model.items)
                    {
                        <tr class="table-light">
                            <td>@Item.Name</td>
                            <td>@Item.Tags</td>
                            @foreach (var cf in Item.ItemCustomFieldVals)
                            {
                                <td>@cf.Value</td>
                            }
                            <td class="td-buttons">
                                <!-- Your existing form for delete and edit buttons -->
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
